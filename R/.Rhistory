sparse.matrix<-function(i,j,x,dims=c(max(i),max(j)))
{
if (length(i)!=length(j))
stop("The row coordinates and column coordinates do not have same length")
sm<-cbind(i,j,x)
sm<-as.data.frame(sm)
m<-list(sparse.matrix=sm,dims=dims)
class(m)<-"sparse.matrix"
return(m)
}
sm0 <- sparse.matrix(i = c(1, 2), j = c(1, 1), x = c(1, 1))
sm1 <- sparse.matrix(i = c(1, 2), j = c(1, 1), x = c(3, 1), dims = c(3, 2))
sm2 <- sparse.matrix(i = c(1, 2, 2), j = c(1, 1, 2), x = c(4.4, 1.2, 3),
dims = c(2, 3))
sm0
sm0 %*%sm1
sm0$sparse.matrix %*%sm1$sparse.matrix
1%*%matrix(c(1,2,3,4),nrow=2)
a <- sparse.matrix(i = c(1, 2), j = c(1, 1), x = c(3, 1), dims = c(3, 2))
b <- sparse.matrix(i = c(1, 2, 2), j = c(1, 1, 2), x = c(4.4, 1.2, 3),
dims = c(2, 3))
'+.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims !=b$dims)
stop("sparse.matrix a and b have different dimensions")
c <- merge(a$sparse.matrix, b$sparse.matrix, by = c("i", "j"), all = TRUE, suffixes = c("1", "2"))
c$x1[is.na(c$x1)] <- 0
c$x2[is.na(c$x2)] <- 0
c$x <- c$x1 + c$x2
c<-c[, c("i", "j", "x")]
m<-list(sparse.matrix=c,dims=a$dims)
class(c)<-"sparse.matrix"
return(c)
}
a+a
#'
'+.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims[1]!=b$dims[1]|a$dims[2]!=b$dims[2])
stop("sparse.matrix a and b have different dimensions")
c <- merge(a$sparse.matrix, b$sparse.matrix, by = c("i", "j"), all = TRUE, suffixes = c("1", "2"))
c$x1[is.na(c$x1)] <- 0
c$x2[is.na(c$x2)] <- 0
c$x <- c$x1 + c$x2
c<-c[, c("i", "j", "x")]
m<-list(sparse.matrix=c,dims=a$dims)
class(c)<-"sparse.matrix"
return(c)
}
a+a
'+.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims[1]!=b$dims[1]|a$dims[2]!=b$dims[2])
stop("sparse.matrix a and b have different dimensions")
c <- merge(a$sparse.matrix, b$sparse.matrix, by = c("i", "j"), all = TRUE, suffixes = c("1", "2"))
c$x1[is.na(c$x1)] <- 0
c$x2[is.na(c$x2)] <- 0
c$x <- c$x1 + c$x2
c<-c[, c("i", "j", "x")]
c<-as.data.frame(c)
m<-list(sparse.matrix=c,dims=a$dims)
class(c)<-"sparse.matrix"
return(c)
}
a+a
'+.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims[1]!=b$dims[1]|a$dims[2]!=b$dims[2])
stop("sparse.matrix a and b have different dimensions")
c <- merge(a$sparse.matrix, b$sparse.matrix, by = c("i", "j"), all = TRUE, suffixes = c("1", "2"))
c$x1[is.na(c$x1)] <- 0
c$x2[is.na(c$x2)] <- 0
c$x <- c$x1 + c$x2
c<-cbind(c$i,c$j,c$x)
m<-list(sparse.matrix=c,dims=a$dims)
class(c)<-"sparse.matrix"
return(c)
}
a+a
'+.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims[1]!=b$dims[1]|a$dims[2]!=b$dims[2])
stop("sparse.matrix a and b have different dimensions")
c <- merge(a$sparse.matrix, b$sparse.matrix, by = c("i", "j"), all = TRUE, suffixes = c("1", "2"))
c$x1[is.na(c$x1)] <- 0
c$x2[is.na(c$x2)] <- 0
c$x <- c$x1 + c$x2
c<-c[,c("i","j","x")
m<-list(sparse.matrix=c,dims=a$dims)
class(m)<-"sparse.matrix"
return(m)
}
'+.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims[1]!=b$dims[1]|a$dims[2]!=b$dims[2])
stop("sparse.matrix a and b have different dimensions")
c <- merge(a$sparse.matrix, b$sparse.matrix, by = c("i", "j"), all = TRUE, suffixes = c("1", "2"))
c$x1[is.na(c$x1)] <- 0
c$x2[is.na(c$x2)] <- 0
c$x <- c$x1 + c$x2
c<-c[,c("i","j","x")]
m<-list(sparse.matrix=c,dims=a$dims)
class(m)<-"sparse.matrix"
return(m)
}
a+a
a
b
a+b
'%*%.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims[2]!=b$dims[1])
stop("The column number of matrix a is not equal to row number of matrix b")
colnames(b$sparse.matrix) <- c("i2", "j2", "x2")
c <- merge(a$sparse.matrix, b$sparse.matrix, by.x = "j", by.y = "i2",all = FALSE, suffixes = c("1", "2"))
c$x <- c$x * c$x2
c$index <- paste(c$i, c$j2, sep = ",")
x <- tapply(c$x, c$index, sum)
index <- strsplit(names(x), ",")
d <- data.frame(i = sapply(index, getElement, 1),
j = sapply(index, getElement, 2),
x = as.numeric(x))
m<-list(sparse.matrix=c,dims=c(a$dims[1],b$dims[2]))
class(m)<-"sparse.matrix"
return(m)
}
a
b
a %*% b
'%*%'<-function(x,y){
UseMethod("%*%",x)
}
a %*% b
'%*%.sparse.matrix'<-function(a,b)
{
if(!inherits(b,"sparse.matrix") )
stop("b argument is not a sparse.matrix type")
if(a$dims[2]!=b$dims[1])
stop("The column number of matrix a is not equal to row number of matrix b")
colnames(b$sparse.matrix) <- c("i2", "j2", "x2")
c <- merge(a$sparse.matrix, b$sparse.matrix, by.x = "j", by.y = "i2",all = FALSE, suffixes = c("1", "2"))
c$x <- c$x * c$x2
c$index <- paste(c$i, c$j2, sep = ",")
x <- tapply(c$x, c$index, sum)
index <- strsplit(names(x), ",")
d <- data.frame(i = sapply(index, getElement, 1),
j = sapply(index, getElement, 2),
x = as.numeric(x))
m<-list(sparse.matrix=d,dims=c(a$dims[1],b$dims[2]))
class(m)<-"sparse.matrix"
return(m)
}
a %*% b
a %*% a
t.sparse.matrix<-function(a)
{
b<-a$sparse.matrix[, c(2,1,3)]
colnames(b)<-c("i","j","x")
class(b)<-c("sparse.matrix",class(b))
m<-list(sparse.matrix=b,dims=c(a$dims[2],a$dims[1]))
class(m)<-"sparse.matrix"
return(m)
}
a
t(a)
t(b)
b
t(b) %*% b
