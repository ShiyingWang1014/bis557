ridge_reg <- function(formula, lambda, data) {
mm<-model.matrix(formula,data)
mf<-model.frame(formula, data)
y<-mf[,1]
SVD<-svd(mm)
U<-SVD$u
V<-SVD$v
sigular.value<-SVD$d
D<-diag(sigular.value/(sigular.value^2+lambda))
beta<-V %*% D %*% t(U) %*% y
rownames(beta)<-colnames(mm)
ridge<-list(coefficients=beta,lambda=lambda,call=match.call(),form=formula)
class(ridge)<-"ridge_reg"
ridge
}
knitr::opts_chunk$set(echo = TRUE)
MSE<-rep(NA,60)
for(i in 1:60)
{
train_fit<-ridge_reg(y~.-1,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
MSE[i]<-mean(error^2)
}
load("/Users/shiyingwang/Desktop/bis557/data/ridge_test.rda")
load("/Users/shiyingwang/Desktop/bis557/data/ridge_train.rda")
MSE<-rep(NA,60)
for(i in 1:60)
{
train_fit<-ridge_reg(y~.-1,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
MSE[i]<-mean(error^2)
}
MSE<-rep(NA,60)
for(i in 1:60)
{
train_fit<-ridge_reg(y~.-1,i,ridge_train)
error<-ridge_test$y-predict.ridge(train_fit,ridge_test)
MSE[i]<-mean(error^2)
}
predict.ridge<-function(object,...)
{
data<-list(...)[[1]]
mm<-model.matrix(object$form,data)
mm %*% object$coefficients
}
MSE<-rep(NA,60)
for(i in 1:60)
{
train_fit<-ridge_reg(y~.-1,i,ridge_train)
error<-ridge_test$y-predict.ridge(train_fit,ridge_test)
MSE[i]<-mean(error^2)
}
plot(MSE)
MSE<-rep(NA,60)
for(i in 1:60)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge(train_fit,ridge_test)
MSE[i]<-mean(error^2)
}
plot(MSE)
plot(MSE)
