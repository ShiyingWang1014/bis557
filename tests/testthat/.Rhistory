load("/Users/shiyingwang/Desktop/bis557/data/ridge_train.rda")
ridge_reg <- function(formula, data,lambda) {
mm<-model.matrix(formula,data)
mf<-model.frame(formula, data)
y<-mf[,1]
SVD<-svd(mm)
U<-SVD$u
V<-SVD$v
svals<-SVD$d
D<-diag(svals/(svals^2+lambda))
beta<-V %*% D %*% t(U) %*% y
rownames(beta)<-colnames(mm)
ret<-list(coefficients=beta,lambda=lambda,call=match.call())
class(ret)<-"ridge_reg"
ret}
ridge_train_scale <- as.data.frame(scale(ridge_train))
fit_ridge <- ridge_reg(y ~. - 1, lambda, ridge_train_scale)
lambda <- 1.2121212
ridge_train_scale <- as.data.frame(scale(ridge_train))
fit_ridge <- ridge_reg(y ~. - 1, lambda, ridge_train_scale)
dim(ridge_train)
head(ridge_train)
ridge_reg <- function(formula, lambda,data) {
mm<-model.matrix(formula,data)
mf<-model.frame(formula, data)
y<-mf[,1]
SVD<-svd(mm)
U<-SVD$u
V<-SVD$v
svals<-SVD$d
D<-diag(svals/(svals^2+lambda))
beta<-V %*% D %*% t(U) %*% y
rownames(beta)<-colnames(mm)
ret<-list(coefficients=beta,lambda=lambda,call=match.call())
class(ret)<-"ridge_reg"
ret}
lambda <- 1.2121212
ridge_train_scale <- as.data.frame(scale(ridge_train))
fit_ridge <- ridge_reg(y ~. - 1, lambda, ridge_train_scale)
fit_ridge
test_that("Ridge regression works.", {
data(ridge_train)
lambda <- 1.2121212
ridge_train_scale <- as.data.frame(scale(ridge_train))
fit_ridge <- ridge_reg(y ~. - 1, lambda, ridge_train_scale)
expect_equivalent(fit_ridge$coef,
c(0.30854117, -0.27991787,  0.04860966, 0.03427351), tolerance = 1e-5)
})
library(testthat)
test_that("Ridge regression works.", {
data(ridge_train)
lambda <- 1.2121212
ridge_train_scale <- as.data.frame(scale(ridge_train))
fit_ridge <- ridge_reg(y ~. - 1, lambda, ridge_train_scale)
expect_equivalent(fit_ridge$coef,
c(0.30854117, -0.27991787,  0.04860966, 0.03427351), tolerance = 1e-5)
})
ridge_reg <- function(formula, lambda,data) {
mm<-model.matrix(formula,data)
mf<-model.frame(formula, data)
y<-mf[,1]
SVD<-svd(mm)
U<-SVD$u
V<-SVD$v
sval<-SVD$d
D<-diag(sval/(sval^2+lambda))
beta<-V %*% D %*% t(U) %*% y
rownames(beta)<-colnames(mm)
ridge<-list(coefficients=beta,lambda=lambda,call=match.call())
class(ridge)<-"ridge_reg"
ridge}
lambda <- 1.2121212
ridge_train_scale <- as.data.frame(scale(ridge_train))
fit_ridge <- ridge_reg(y ~. - 1, lambda, ridge_train_scale)
fit_ridge
fit <- ridge_reg(Sepal.Length ~.,1, iris)
fit
knitr::opts_chunk$set(echo = TRUE)
predict.ridge_reg<-function(object,...)
{
newdata<-list(...)[[1]]
m<-model.matrix(object$form,newdata)
m %*% object$coefficients
}
predict.ridge_reg(fit_ridge)
predict.ridge_reg(fit_ridge,ridge_train)
predict.ridge_reg(fit_ridge,ridge_train)
lm<-lm(Sepal.Length ~., iris)
lm1<-lm(Sepal.Length ~., iris)
predict(lm1)
ridge_reg <- function(formula, lambda, data) {
mm<-model.matrix(formula,data)
mf<-model.frame(formula, data)
y<-mf[,1]
SVD<-svd(mm)
U<-SVD$u
V<-SVD$v
sval<-SVD$d
D<-diag(sval/(sval^2+lambda))
beta<-V %*% D %*% t(U) %*% y
rownames(beta)<-colnames(mm)
ridge<-list(coefficients=beta,lambda=lambda,call=match.call(),form=form)
class(ridge)<-"ridge_reg"
ridge
}
predict.ridge_reg<-function(object,...)
{
newdata<-list(...)[[1]]
m<-model.matrix(object$form,newdata)
m %*% object$coefficients
}
fit_ridge <- ridge_reg(y ~. , 1.2, ridge_train)
ridge_reg <- function(formula, lambda, data) {
mm<-model.matrix(formula,data)
mf<-model.frame(formula, data)
y<-mf[,1]
SVD<-svd(mm)
U<-SVD$u
V<-SVD$v
sval<-SVD$d
D<-diag(sval/(sval^2+lambda))
beta<-V %*% D %*% t(U) %*% y
rownames(beta)<-colnames(mm)
ridge<-list(coefficients=beta,lambda=lambda,call=match.call(),form=formula)
class(ridge)<-"ridge_reg"
ridge
}
fit_ridge <- ridge_reg(y ~. , 1.2, ridge_train)
fit_ridge
predict.ridge_reg(fit_ridge,ridge_train)
load("/Users/shiyingwang/Desktop/bis557/data/ridge_test.rda")
predict.ridge_reg(fit_ridge,ridge_test)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
train_fit<-ridge_reg(y~,1.2,ridge_train)
train_fit<-ridge_reg(y~.,1.2,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
mean(error^2)
seq(0,1,by=0.1)
SSE<-rep(NA,10)
SSE
for(i in seq(0,1,by=0.1))
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
SSE
for(i in seq(0,1,by=0.1))
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
SSE
for(i in 1:10)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
SSE
plot(SSE)
SSE<-rep(NA,20)
for(i in 1:20)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
plot(SSE)
SSE<-rep(NA,30)
for(i in 1:30)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
plot(SSE)
SSE<-rep(NA,100)
for(i in 1:100)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
PLOT(SSE)
plot(SSE)
SSE<-rep(NA,40)
for(i in 1:40)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
plot(SSE)
plot(SSE)
lambda_seq<-(0,10,by=0.1)
SSE<-rep(NA,50)
for(i in 1:50)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
plot(SSE)
SSE<-rep(NA,60)
for(i in 1:60)
{
train_fit<-ridge_reg(y~.,i,ridge_train)
error<-ridge_test$y-predict.ridge_reg(train_fit,ridge_test)
SSE[i]<-mean(error^2)
}
plot(SSE)
